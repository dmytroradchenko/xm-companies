// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	store "xm-companies/internal/xm-companies/store"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// Companies provides a mock function with given fields:
func (_m *Store) Companies() store.CompaniesRepository {
	ret := _m.Called()

	var r0 store.CompaniesRepository
	if rf, ok := ret.Get(0).(func() store.CompaniesRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.CompaniesRepository)
		}
	}

	return r0
}

// Users provides a mock function with given fields:
func (_m *Store) Users() store.UsersRepository {
	ret := _m.Called()

	var r0 store.UsersRepository
	if rf, ok := ret.Get(0).(func() store.UsersRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.UsersRepository)
		}
	}

	return r0
}

// NewStore creates a new instance of Store. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewStore(t testing.TB) *Store {
	mock := &Store{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
